CREATE OR REPLACE
TYPE ADMIN.DatosPersonales AS OBJECT(
  nombre VARCHAR2(100),
  tipo_documento VARCHAR2(15),
  id_documento VARCHAR2(10),
  STATIC FUNCTION validar_documento ( id_documento VARCHAR2, tipo_documento VARCHAR2 ) RETURN VARCHAR2,
  STATIC FUNCTION validar_nombre ( nombre VARCHAR2 ) RETURN VARCHAR2
);

CREATE OR REPLACE
TYPE ADMIN.Costo AS OBJECT(
  monto INT,
  agregado INT,
  STATIC FUNCTION monto_total ( monto INT, agregado INT ) RETURN INT,
  STATIC FUNCTION convertir ( monto INT, agregado INT ) RETURN INT
);

CREATE OR REPLACE
TYPE ADMIN.RangoFecha AS OBJECT(
  fecha_inicial DATE,
  fecha_final DATE,
  STATIC FUNCTION validar_fecha ( fecha DATE ) RETURN VARCHAR2,
  STATIC FUNCTION mover_fecha ( fecha DATE ) RETURN VARCHAR2
);

CREATE OR REPLACE
TYPE ADMIN.Calificacion AS OBJECT(
  escala VARCHAR2(2),
  observaciones VARCHAR2(200),
  STATIC FUNCTION promedio RETURN VARCHAR2,
  STATIC FUNCTION validar_escala ( escala VARCHAR2 ) RETURN VARCHAR2
);

DROP TABLE ADMIN.CONTINGENCIA;
CREATE TABLE ADMIN.CONTINGENCIA (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  descripcion VARCHAR2(100) NOT NULL
);
SELECT * FROM ADMIN.CONTINGENCIA;

DROP TABLE ADMIN.RUTA;
CREATE TABLE ADMIN.RUTA (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  contingencia_id INT,
  FOREIGN KEY (contingencia_id)
    REFERENCES Contingencia(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.RUTA;

DROP TABLE ADMIN.UNIDAD;
CREATE TABLE ADMIN.UNIDAD (
  id INT PRIMARY KEY NOT NULL,
  ruta_id INT,
  fecha RangoFecha NOT NULL,
  placa VARCHAR2(10) NOT NULL,
  foto BLOB NOT NULL,
  tipo VARCHAR2(100) NOT NULL,
  estado VARCHAR2(100) NOT NULL,
  ubicacion VARCHAR2(100) NOT NULL,
  numero_asientos INT DEFAULT 0,
  FOREIGN KEY (ruta_id)
    REFERENCES Ruta(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.UNIDAD;

DROP TABLE ADMIN.ALIANZA;
CREATE TABLE ADMIN.ALIANZA (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  fecha RangoFecha NOT NULL,
  descripcion VARCHAR2(100) NOT NULL
);
SELECT * FROM ADMIN.ALIANZA;

DROP TABLE ADMIN.DISPONE;
CREATE TABLE ADMIN.DISPONE (
  id INT PRIMARY KEY NOT NULL,
  fecha RangoFecha NOT NULL,
  alianza_id INT NOT NULL,
  unidad_id INT NOT NULL,
  FOREIGN KEY (alianza_id)
    REFERENCES Alianza(id)
    ON DELETE CASCADE,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.DISPONE;

DROP TABLE ADMIN.MANTENIMIENTO;
CREATE TABLE ADMIN.MANTENIMIENTO(
  id INT PRIMARY KEY NOT NULL,
  unidad_id INT NOT NULL,
  observaciones VARCHAR2(100) NOT NULL,
  fecha RangoFecha NOT NULL,
  repuestos VARCHAR2(100),
  desperfectos VARCHAR2(100),
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.MANTENIMIENTO;

DROP TABLE ADMIN.PED;
CREATE TABLE ADMIN.PED (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  tipo INT NOT NULL,
  coordenadas VARCHAR2(100) NOT NULL
);
SELECT * FROM ADMIN.PED;

DROP TABLE ADMIN.CLIENTE;
CREATE TABLE ADMIN.CLIENTE (
  id INT PRIMARY KEY NOT NULL,
  datos DatosPersonales NOT NULL,
  fecha_desde DATE DEFAULT SYSDATE,
  tipo VARCHAR2(100) NOT NULL,
  logo BLOB,
  genero VARCHAR2(100),
  telefono VARCHAR2(20)
);
SELECT * FROM ADMIN.CLIENTE;

DROP TABLE ADMIN.RESERVA;
CREATE TABLE ADMIN.RESERVA (
  id INT PRIMARY KEY NOT NULL,
  estado VARCHAR2(100) NOT NULL,
  hora_traslado DATE NOT NULL,
  costo Costo NOT NULL,
  calificacion Calificacion NOT NULL,
  fechas RangoFecha NOT NULL,
  duracion INT NOT NULL,
  puestos INT DEFAULT 1,
  embarque INT NOT NULL,
  desembarque INT NOT NULL,
  unidad_id INT NOT NULL,
  cliente_id INT NOT NULL,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE,
  FOREIGN KEY (embarque)
    REFERENCES PED(id)
    ON DELETE CASCADE,
  FOREIGN KEY (desembarque)
    REFERENCES PED(id)
    ON DELETE CASCADE,
  FOREIGN KEY (cliente_id)
    REFERENCES Cliente(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.RESERVA;

DROP TABLE ADMIN.HORARIO;
CREATE TABLE ADMIN.HORARIO (
  id INT PRIMARY KEY NOT NULL,
  hora_inicio DATE NOT NULL,
  hora_fin DATE NOT NULL,
  dia VARCHAR2(100) NOT NULL
);
SELECT * FROM ADMIN.HORARIO;

DROP TABLE ADMIN.CUMPLE;
CREATE TABLE ADMIN.CUMPLE(
  id INT PRIMARY KEY NOT NULL,
  horario_id INT NOT NULL,
  unidad_id INT NOT NULL,
  FOREIGN KEY (horario_id)
    REFERENCES Horario(id)
    ON DELETE CASCADE,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.CUMPLE;

DROP TABLE ADMIN.RECORRE;
CREATE TABLE ADMIN.RECORRE (
  id INT PRIMARY KEY NOT NULL,
  ruta_id INT NOT NULL,
  pos INT NOT NULL,
  punto INT NOT NULL,
  FOREIGN KEY (ruta_id)
    REFERENCES Ruta(id)
    ON DELETE CASCADE,
  FOREIGN KEY (punto)
    REFERENCES PED(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.RECORRE;

DROP TABLE ADMIN.SERVICIOS;
CREATE TABLE ADMIN.SERVICIOS (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  descripcion VARCHAR2(100) NOT NULL,
  exclusivo INT NOT NULL
);
SELECT * FROM ADMIN.SERVICIOS;

DROP TABLE ADMIN.OFRECE;
CREATE TABLE ADMIN.OFRECE (
  id INT PRIMARY KEY NOT NULL,
  servicios_id INT NOT NULL,
  unidad_id INT NOT NULL,
  FOREIGN KEY (servicios_id)
    REFERENCES Servicios(id)
    ON DELETE CASCADE,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.OFRECE;

DROP TABLE ADMIN.CATEGORIA;
CREATE TABLE ADMIN.CATEGORIA(
  id INT PRIMARY KEY NOT NULL,
  nommbre VARCHAR2(100) NOT NULL,
  foto BLOB
);
SELECT * FROM ADMIN.CATEGORIA;

DROP TABLE ADMIN.PLAN;
CREATE TABLE ADMIN.PLAN(
  id INT PRIMARY KEY NOT NULL,
  tipo_cliente VARCHAR2(100) NOT NULL,
  tipo_unidad VARCHAR2(100) NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  caracteristicas VARCHAR2(100) NOT NULL,
  fecha RangoFecha NOT NULL,
  categoria_id INT NOT NULL,
  FOREIGN KEY (categoria_id)
    REFERENCES Categoria(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.PLAN;

DROP TABLE ADMIN.SYSTEM.CONTRATA;
CREATE TABLE ADMIN.CONTRATA(
  id INT PRIMARY KEY NOT NULL,
  fecha RangoFecha NOT NULL,
  activo VARCHAR2(2) NOT NULL,
  plan_id INT NOT NULL,
  cliente_id INT NOT NULL,
  FOREIGN KEY (plan_id)
    REFERENCES Plan(id)
    ON DELETE CASCADE,
  FOREIGN KEY (cliente_id)
    REFERENCES Cliente(id)
    ON DELETE CASCADE
);
SELECT * FROM ADMIN.CONTRATA;
