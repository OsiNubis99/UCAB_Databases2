CREATE OR REPLACE
TYPE DatosPersonales AS OBJECT(
  nombre VARCHAR2(100),
  tipo_documento VARCHAR2(15),
  id_documento VARCHAR2(10),
  STATIC FUNCTION validar_documento ( id_documento VARCHAR2, tipo_documento VARCHAR2 ) RETURN VARCHAR2,
  STATIC FUNCTION validar_nombre ( nombre VARCHAR2 ) RETURN VARCHAR2
);

CREATE OR REPLACE
TYPE Costo AS OBJECT(
  monto INT,
  agregado INT,
  STATIC FUNCTION monto_total ( monto INT, agregado INT ) RETURN INT,
  STATIC FUNCTION convertir ( monto INT, agregado INT ) RETURN INT
);

CREATE OR REPLACE
TYPE RangoFecha AS OBJECT(
  fecha_inicial DATE,
  fecha_final DATE,
  STATIC FUNCTION validar_fecha ( fecha DATE ) RETURN VARCHAR2,
  STATIC FUNCTION mover_fecha ( fecha DATE ) RETURN VARCHAR2
);

CREATE OR REPLACE
TYPE Calificacion AS OBJECT(
  escala VARCHAR2(2),
  observaciones VARCHAR2(200),
  STATIC FUNCTION promedio RETURN VARCHAR2,
  STATIC FUNCTION validar_escala ( escala VARCHAR2 ) RETURN VARCHAR2
);

DROP TABLE CONTINGENCIA;
CREATE TABLE CONTINGENCIA (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  descripcion VARCHAR2(100) NOT NULL
);
CREATE SEQUENCE SEQ_CONTINGENCIA_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_CONTINGENCIA
BEFORE INSERT ON CONTINGENCIA
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_CONTINGENCIA_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE RUTA;
CREATE TABLE RUTA (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  contingencia_id INT NOT NULL,
  FOREIGN KEY (contingencia_id)
    REFERENCES Contingencia(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_RUTA_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_RUTA
BEFORE INSERT ON RUTA
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_RUTA_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE UNIDAD;
CREATE TABLE UNIDAD (
  id INT PRIMARY KEY NOT NULL,
  ruta_id INT,
  fecha RangoFecha NOT NULL,
  placa VARCHAR2(100) NOT NULL,
  foto BLOB NOT NULL,
  tipo VARCHAR2(100) NOT NULL,
  estado VARCHAR2(100) NOT NULL,
  ubicacion VARCHAR2(100) NOT NULL,
  numero_asientos INT,
  FOREIGN KEY (ruta_id)
    REFERENCES Ruta(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_UNIDAD_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_UNIDAD
BEFORE INSERT ON UNIDAD
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  if NEW.id = 0 then
    SELECT SEQ_UNIDAD_ID.NEXTVAL INTO :NEW.id FROM dual;
  END IF;
END;

DROP TABLE ALIANZA;
CREATE TABLE ALIANZA (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  fecha RangoFecha NOT NULL,
  descripcion VARCHAR2(100) NOT NULL
);
CREATE SEQUENCE SEQ_ALIANZA_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_ALIANZA
BEFORE INSERT ON ALIANZA
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
  SELECT SEQ_ALIANZA_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE DISPONE;
CREATE TABLE DISPONE (
  id INT PRIMARY KEY NOT NULL,
  fecha RangoFecha NOT NULL,
  alianza_id INT NOT NULL,
  unidad_id INT NOT NULL,
  FOREIGN KEY (alianza_id)
    REFERENCES Alianza(id)
    ON DELETE CASCADE,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_DISPONE_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_DISPONE
BEFORE INSERT ON DISPONE
FOR EACH ROW
BEGIN
  IF :new.id = 0 THEN
    SELECT SEQ_DISPONE_ID.NEXTVAL INTO :new.id FROM dual;
  END IF;
END;

DROP TABLE MANTENIMIENTO;
CREATE TABLE MANTENIMIENTO(
  id INT PRIMARY KEY NOT NULL,
  unidad_id INT NOT NULL,
  observaciones VARCHAR2(100) NOT NULL,
  fecha RangoFecha NOT NULL,
  repuestos VARCHAR2(100),
  desperfectos VARCHAR2(100),
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_MANTENIMEINTO_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_MANTENIMEINTO
BEFORE INSERT ON MANTENIMIENTO
FOR EACH ROW
BEGIN
  IF :new.id = 0 THEN
    SELECT SEQ_MANTENIMEINTO_ID.NEXTVAL INTO :new.id FROM dual;
  END IF;
END;

DROP TABLE PED;
CREATE TABLE PED (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  tipo INT NOT NULL,
  coordenadas VARCHAR2(100) NOT NULL
);
CREATE SEQUENCE SEQ_PED_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_PED
BEFORE INSERT ON PED
FOR EACH ROW
BEGIN
  IF :new.id = 0 THEN
    SELECT SEQ_PED_ID.NEXTVAL INTO :new.id FROM dual;
  END IF;
END;

DROP TABLE CLIENTE;
CREATE TABLE CLIENTE (
  id INT PRIMARY KEY NOT NULL,
  datos DatosPersonales NOT NULL,
  fecha_desde DATE DEFAULT SYSDATE,
  tipo VARCHAR2(100) NOT NULL,
  logo BLOB,
  genero VARCHAR2(100),
  telefono VARCHAR2(20)
);
CREATE SEQUENCE SEQ_CLIENTE_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_CLIENTE
BEFORE INSERT ON CLIENTE
FOR EACH ROW
BEGIN
  IF :new.id = 0 THEN
    SELECT SEQ_CLIENTE_ID.NEXTVAL INTO :new.id FROM dual;
  END IF;
END;

DROP TABLE RESERVA;
CREATE TABLE RESERVA (
  id INT PRIMARY KEY NOT NULL,
  estado VARCHAR2(100) NOT NULL,
  hora_traslado DATE NOT NULL,
  costo Costo NOT NULL,
  calificacion Calificacion NOT NULL,
  fechas RangoFecha NOT NULL,
  duracion INT NOT NULL,
  puestos INT NOT NULL,
  embarque INT NOT NULL,
  desembarque INT NOT NULL,
  unidad_id INT NOT NULL,
  cliente_id INT NOT NULL,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE,
  FOREIGN KEY (embarque)
    REFERENCES PED(id)
    ON DELETE CASCADE,
  FOREIGN KEY (desembarque)
    REFERENCES PED(id)
    ON DELETE CASCADE,
  FOREIGN KEY (cliente_id)
    REFERENCES Cliente(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_RESERVA_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_RESERVA
BEFORE INSERT ON RESERVA
FOR EACH ROW
BEGIN
  IF :new.id = 0 THEN
    SELECT SEQ_RESERVA_ID.NEXTVAL INTO :new.id FROM dual;
  END IF;
END;

DROP TABLE HORARIO;
CREATE TABLE HORARIO (
  id INT PRIMARY KEY NOT NULL,
  hora_inicio DATE NOT NULL,
  hora_fin DATE NOT NULL,
  dia VARCHAR2(100) NOT NULL
);
CREATE SEQUENCE SEQ_HORARIO_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_HORARIO
BEFORE INSERT ON HORARIO
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_HORARIO_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE CUMPLE;
CREATE TABLE CUMPLE(
  id INT PRIMARY KEY NOT NULL,
  horario_id INT NOT NULL,
  unidad_id INT NOT NULL,
  FOREIGN KEY (horario_id)
    REFERENCES Horario(id)
    ON DELETE CASCADE,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_CUMPLE_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_CUMPLE
BEFORE INSERT ON CUMPLE
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_CUMPLE_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE RECORRE;
CREATE TABLE RECORRE (
  id INT PRIMARY KEY NOT NULL,
  ruta_id INT NOT NULL,
  pos INT NOT NULL,
  punto INT NOT NULL,
  FOREIGN KEY (ruta_id)
    REFERENCES Ruta(id)
    ON DELETE CASCADE,
  FOREIGN KEY (punto)
    REFERENCES PED(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_RECORRE_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_RECORRE
BEFORE INSERT ON RECORRE
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_RECORRE_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE SERVICIOS;
CREATE TABLE SERVICIOS (
  id INT PRIMARY KEY NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  descripcion VARCHAR2(100) NOT NULL,
  exclusivo INT NOT NULL
);
CREATE SEQUENCE SEQ_SERVICIOS_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_SERVICIOS
BEFORE INSERT ON SERVICIOS
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_SERVICIOS_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE OFRECE;
CREATE TABLE OFRECE (
  id INT PRIMARY KEY NOT NULL,
  servicios_id INT NOT NULL,
  unidad_id INT NOT NULL,
  FOREIGN KEY (servicios_id)
    REFERENCES Servicios(id)
    ON DELETE CASCADE,
  FOREIGN KEY (unidad_id)
    REFERENCES Unidad(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_OFRECE_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_OFRECE
BEFORE INSERT ON OFRECE
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_OFRECE_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE CATEGORIA;
CREATE TABLE CATEGORIA(
  id INT PRIMARY KEY NOT NULL,
  nommbre VARCHAR2(100) NOT NULL,
  foto BLOB
);
CREATE SEQUENCE SEQ_CATEGORIA_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_CATEGORIA
BEFORE INSERT ON CATEGORIA
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_CATEGORIA_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE PLAN;
CREATE TABLE PLAN(
  id INT PRIMARY KEY NOT NULL,
  tipo_cliente VARCHAR2(100) NOT NULL,
  tipo_unidad VARCHAR2(100) NOT NULL,
  nombre VARCHAR2(100) NOT NULL,
  caracteristicas VARCHAR2(100) NOT NULL,
  fecha RangoFecha NOT NULL,
  categoria_id INT NOT NULL,
  FOREIGN KEY (categoria_id)
    REFERENCES Categoria(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_PLAN_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_PLAN
BEFORE INSERT ON PLAN
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_PLAN_ID.NEXTVAL INTO :NEW.id FROM dual;
END;

DROP TABLE CONTRATA;
CREATE TABLE CONTRATA(
  id INT PRIMARY KEY NOT NULL,
  fecha RangoFecha NOT NULL,
  activo VARCHAR2(2) NOT NULL,
  plan_id INT NOT NULL,
  cliente_id INT NOT NULL,
  FOREIGN KEY (plan_id)
    REFERENCES Plan(id)
    ON DELETE CASCADE,
  FOREIGN KEY (cliente_id)
    REFERENCES Cliente(id)
    ON DELETE CASCADE
);
CREATE SEQUENCE SEQ_CONTRATA_ID
START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE OR REPLACE
TRIGGER BI_CONTRATA
BEFORE INSERT ON CONTRATA
REFERENCING NEW AS NEW
FOR EACH ROW
  WHEN (NEW.id = 0)
BEGIN
    SELECT SEQ_CONTRATA_ID.NEXTVAL INTO :NEW.id FROM dual;
END;
